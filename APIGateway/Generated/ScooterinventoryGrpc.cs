// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: scooterinventory.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace ScooterInventory {
  public static partial class ScooterInventoryService
  {
    static readonly string __ServiceName = "ScooterInventory.ScooterInventoryService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.GetAvailableScootersRequest> __Marshaller_ScooterInventory_GetAvailableScootersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.GetAvailableScootersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.GetAvailableScootersResponse> __Marshaller_ScooterInventory_GetAvailableScootersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.GetAvailableScootersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.Scooter> __Marshaller_ScooterInventory_Scooter = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.Scooter.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.AddNewScooterResponse> __Marshaller_ScooterInventory_AddNewScooterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.AddNewScooterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.DeleteScooterRequest> __Marshaller_ScooterInventory_DeleteScooterRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.DeleteScooterRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.DeleteScooterResponse> __Marshaller_ScooterInventory_DeleteScooterResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.DeleteScooterResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.UpdateScooterStatusRequest> __Marshaller_ScooterInventory_UpdateScooterStatusRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.UpdateScooterStatusRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.UpdateScooterStatusResponse> __Marshaller_ScooterInventory_UpdateScooterStatusResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.UpdateScooterStatusResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.GetAllScootersRequest> __Marshaller_ScooterInventory_GetAllScootersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.GetAllScootersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::ScooterInventory.GetAllScootersResponse> __Marshaller_ScooterInventory_GetAllScootersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::ScooterInventory.GetAllScootersResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ScooterInventory.GetAvailableScootersRequest, global::ScooterInventory.GetAvailableScootersResponse> __Method_GetAvailableScooters = new grpc::Method<global::ScooterInventory.GetAvailableScootersRequest, global::ScooterInventory.GetAvailableScootersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAvailableScooters",
        __Marshaller_ScooterInventory_GetAvailableScootersRequest,
        __Marshaller_ScooterInventory_GetAvailableScootersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ScooterInventory.Scooter, global::ScooterInventory.AddNewScooterResponse> __Method_AddANewScooter = new grpc::Method<global::ScooterInventory.Scooter, global::ScooterInventory.AddNewScooterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddANewScooter",
        __Marshaller_ScooterInventory_Scooter,
        __Marshaller_ScooterInventory_AddNewScooterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ScooterInventory.DeleteScooterRequest, global::ScooterInventory.DeleteScooterResponse> __Method_DeleteAScooter = new grpc::Method<global::ScooterInventory.DeleteScooterRequest, global::ScooterInventory.DeleteScooterResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAScooter",
        __Marshaller_ScooterInventory_DeleteScooterRequest,
        __Marshaller_ScooterInventory_DeleteScooterResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ScooterInventory.UpdateScooterStatusRequest, global::ScooterInventory.UpdateScooterStatusResponse> __Method_UpdateScooterStatus = new grpc::Method<global::ScooterInventory.UpdateScooterStatusRequest, global::ScooterInventory.UpdateScooterStatusResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateScooterStatus",
        __Marshaller_ScooterInventory_UpdateScooterStatusRequest,
        __Marshaller_ScooterInventory_UpdateScooterStatusResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::ScooterInventory.GetAllScootersRequest, global::ScooterInventory.GetAllScootersResponse> __Method_GetAllScooters = new grpc::Method<global::ScooterInventory.GetAllScootersRequest, global::ScooterInventory.GetAllScootersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllScooters",
        __Marshaller_ScooterInventory_GetAllScootersRequest,
        __Marshaller_ScooterInventory_GetAllScootersResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::ScooterInventory.ScooterinventoryReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ScooterInventoryService</summary>
    public partial class ScooterInventoryServiceClient : grpc::ClientBase<ScooterInventoryServiceClient>
    {
      /// <summary>Creates a new client for ScooterInventoryService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ScooterInventoryServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ScooterInventoryService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ScooterInventoryServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ScooterInventoryServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ScooterInventoryServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.GetAvailableScootersResponse GetAvailableScooters(global::ScooterInventory.GetAvailableScootersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAvailableScooters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.GetAvailableScootersResponse GetAvailableScooters(global::ScooterInventory.GetAvailableScootersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAvailableScooters, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.GetAvailableScootersResponse> GetAvailableScootersAsync(global::ScooterInventory.GetAvailableScootersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAvailableScootersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.GetAvailableScootersResponse> GetAvailableScootersAsync(global::ScooterInventory.GetAvailableScootersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAvailableScooters, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.AddNewScooterResponse AddANewScooter(global::ScooterInventory.Scooter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddANewScooter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.AddNewScooterResponse AddANewScooter(global::ScooterInventory.Scooter request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddANewScooter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.AddNewScooterResponse> AddANewScooterAsync(global::ScooterInventory.Scooter request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddANewScooterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.AddNewScooterResponse> AddANewScooterAsync(global::ScooterInventory.Scooter request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddANewScooter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.DeleteScooterResponse DeleteAScooter(global::ScooterInventory.DeleteScooterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAScooter(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.DeleteScooterResponse DeleteAScooter(global::ScooterInventory.DeleteScooterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAScooter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.DeleteScooterResponse> DeleteAScooterAsync(global::ScooterInventory.DeleteScooterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAScooterAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.DeleteScooterResponse> DeleteAScooterAsync(global::ScooterInventory.DeleteScooterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAScooter, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.UpdateScooterStatusResponse UpdateScooterStatus(global::ScooterInventory.UpdateScooterStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateScooterStatus(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.UpdateScooterStatusResponse UpdateScooterStatus(global::ScooterInventory.UpdateScooterStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateScooterStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.UpdateScooterStatusResponse> UpdateScooterStatusAsync(global::ScooterInventory.UpdateScooterStatusRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateScooterStatusAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.UpdateScooterStatusResponse> UpdateScooterStatusAsync(global::ScooterInventory.UpdateScooterStatusRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateScooterStatus, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.GetAllScootersResponse GetAllScooters(global::ScooterInventory.GetAllScootersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllScooters(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::ScooterInventory.GetAllScootersResponse GetAllScooters(global::ScooterInventory.GetAllScootersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllScooters, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.GetAllScootersResponse> GetAllScootersAsync(global::ScooterInventory.GetAllScootersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllScootersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::ScooterInventory.GetAllScootersResponse> GetAllScootersAsync(global::ScooterInventory.GetAllScootersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllScooters, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ScooterInventoryServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ScooterInventoryServiceClient(configuration);
      }
    }

  }
}
#endregion
